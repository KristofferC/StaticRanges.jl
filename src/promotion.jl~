# Promotion rules:
# 1. Static + Mutable -> Mutable

function Base.promote_rule(
    a::Type{StepMRangeLen{T1,R1,S1}},
    b::Type{<:StepSRangeLen{T2,R2,S2}}
   ) where {T1,T2,R1,R2,S1,S2}
    return promote_rule(a, StepMRangeLen{T2,R2,S2})
end

function Base.promote_rule(
    a::Type{StepMRange{T1,S1}},
    b::Type{<:StepSRange{T2,S2}}
   ) where {T1,T2,S1,S2}
    return promote_rule(a, StepMRange{T2,S2})
end

function Base.promote_rule(
    a::Type{UnitMRange{T1}},
    b::Type{<:UnitSRange{T2}}
   ) where {T1,T2}
    return promote_rule(a, UnitMRange{T2})
end

function Base.promote_rule(
    a::Type{LinMRange{T1}},
    b::Type{<:LinSRange{T2}}
   ) where {T1,T2}
    return promote_rule(a, LinMRange{T2})
end

function Base.promote_rule(
    a::Type{OneToMRange{T1}},
    b::Type{<:OneToSRange{T2}}
   ) where {T1,T2}
    return promote_rule(a, OneToMRange{T2})
end

#function Base.promote_rule()
#end

